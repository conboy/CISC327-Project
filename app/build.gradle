/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

// PLugins for Gradle. Configurations are found at the bottom of the file.
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Plugin for formatting java files through Gradle. Use "./gradlew goJF" to format.
    id 'com.github.sherter.google-java-format' version '0.9'

    // Plugin for building js through Node using Gradle. to actually run a *.js
    // file, look at
    // https://github.com/node-gradle/gradle-node-plugin/blob/master/examples/simple-node/build.gradle
    // in order to run files etc.
    id "com.github.node-gradle.node" version "3.5.0"

}

task wrapper(type: Wrapper) {
    gradleVersion = '7.2'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

    // This dependency is used to simplify JSON serialization
    implementation 'com.google.code.gson:gson:2.9.1'

    // Adds websocket server implementation
    implementation 'org.glassfish.tyrus:tyrus-server:2.1.1'
    implementation 'org.glassfish.tyrus:tyrus-client:2.1.1'
    implementation 'org.glassfish.tyrus:tyrus-container-grizzly-server:2.1.1'
    implementation 'jakarta.websocket:jakarta.websocket-api:2.1.0'

    // Selenium for web testing
    implementation 'org.seleniumhq.selenium:selenium-java:4.5.3'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.5.3'
    implementation 'io.github.bonigarcia:webdrivermanager:5.3.0'

}

application {
    // Define the main class for the application.
    mainClass = 'qbnb.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Plugin Configuration

// Config for com.moowork.node
node {
    // Whether to download and install a specific Node.js version or not
    // If false, it will use the globally installed Node.js
    // If true, it will download node using above parameters
    // Note that npm is bundled with Node.js
    download = true
    
    // Version of node to download and install (only used if download is true)
    // It will be unpacked in the workDir
    version = "16.14.0"
    
    // Version of npm to use
    // If specified, installs it in the npmWorkDir
    // If empty, the plugin will use the npm command bundled with Node.js
    npmVersion = ""
    
    // Version of Yarn to use
    // Any Yarn task first installs Yarn in the yarnWorkDir
    // It uses the specified version if defined and the latest version otherwise (by default)
    yarnVersion = ""
    
    // Base URL for fetching node distributions
    // Only used if download is true
    // Change it if you want to use a mirror
    // Or set to null if you want to add the repository on your own.
    distBaseUrl = "https://nodejs.org/dist"
    
    // Specifies whether it is acceptable to communicate with the Node.js repository over an insecure HTTP connection.
    // Only used if download is true
    // Change it to true if you use a mirror that uses HTTP rather than HTTPS
    // Or set to null if you want to use Gradle's default behaviour.
    allowInsecureProtocol = null
    
    // The npm command executed by the npmInstall task
    // By default it is install but it can be changed to ci
    npmInstallCommand = "install"
    
    // The directory where Node.js is unpacked (when download is true) 
    workDir = file("${project.buildDir}/nodejs")
    
    // The directory where npm is installed (when a specific version is defined)
    npmWorkDir = file("${project.buildDir}/npm")
    
    // The directory where yarn is installed (when a Yarn task is used)
    yarnWorkDir = file("${project.buildDir}/yarn")
    
    // The Node.js project directory location
    // This is where the package.json file and node_modules directory are located
    // By default it is at the root of the current project
    nodeProjectDir = file("${project.projectDir}/node")
    
    // Whether the plugin automatically should add the proxy configuration to npm and yarn commands
    // according the proxy configuration defined for Gradle
    // Disable this option if you want to configure the proxy for npm or yarn on your own
    // (in the .npmrc file for instance)
    nodeProxySettings = ProxySettings.SMART
}
